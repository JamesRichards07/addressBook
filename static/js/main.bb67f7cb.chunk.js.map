{"version":3,"sources":["components/ContactContext.tsx","components/contacts/NewContactForm.tsx","components/contacts/ContactItem.tsx","components/contacts/ContactList.tsx","components/functions/FetchAll.tsx","pages/Contacts.tsx","pages/NewContact.tsx","components/home/HomeItem.tsx","components/home/Home.tsx","pages/Main.tsx","components/contacts/UpdateContactForm.tsx","pages/UpdateContact.tsx","components/Modal.tsx","components/Backdrop.tsx","pages/DeleteContact.tsx","App.tsx","index.tsx"],"names":["ContactContext","createContext","contact","replaceContact","contactId","ContactContextProvider","props","useState","setContact","context","Provider","value","children","NewContactForm","emails","setEmails","firstNameInputRef","useRef","lastNameInputRef","emailInputRef","addToEmailInputRef","email","current","includes","push","onSubmit","event","preventDefault","enteredFirstName","enteredLastName","enteredEmailList","i","length","contactData","firstName","lastName","onNewContact","className","htmlFor","type","required","id","name","ref","map","onClick","to","ContactItem","contactCtx","useContext","history","useHistory","replace","SelectedContactHandler","ContactList","contacts","FetchAll","url","method","setIsLoading","setLoadedContacts","sortData","data","sort","a","b","localeCompare","fetch","then","response","json","fetchResponse","key","fetchData","ContactPage","isLoading","loadedContacts","useEffect","console","log","NewContactPage","Contacts","newContactData","body","JSON","stringify","headers","HomeItem","undefined","HomePage","content","firstContact","MainPage","Home","UpdateContactForm","handleSubmit","useForm","currentFirstName","currentLastName","currentEmails","updatedFirstName","updatedLastName","updatedEmails","onContactUpdate","defaultValue","placeholder","k","UpdateContact","updateContactData","Modal","onCancel","Backdrop","DeleteContactPage","modalIsOpen","setModalIsOpen","closeModalHandler","Main","App","path","exact","DeleteContact","NewContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb67f7cb.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\n\nconst ContactContext = createContext({\n    contact: [],\n    replaceContact: (contactId: object) => {}\n})\n\nexport function ContactContextProvider(props:any){\n    const [contact, setContact] = useState([]);\n\n    function replaceContactHandler(contactId:any){\n        return (\n            setContact(contactId)\n        )\n    };\n\n    const context = {\n        contact: contact,\n        replaceContact: replaceContactHandler\n    };\n\n    return(\n    <ContactContext.Provider value={context}>\n        {props.children}\n    </ContactContext.Provider>\n    );\n}\n\nexport default ContactContext;\n\n","import React, { useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\n\nfunction NewContactForm(props: any){\n    const [emails, setEmails] = useState<string[]>([]);\n\n    const firstNameInputRef = useRef<HTMLInputElement>(null);\n    const lastNameInputRef = useRef<HTMLInputElement>(null);\n    const emailInputRef = useRef<HTMLInputElement[]>([]);\n\n    function submitContactHandler(event: React.FormEvent<HTMLFormElement>): void{\n        event.preventDefault();\n        \n        const enteredFirstName = firstNameInputRef.current?.value;\n        const enteredLastName = lastNameInputRef.current?.value;\n        const enteredEmailList = [];\n\n        for(let i = 0; i < emails.length; i++){\n            if(emailInputRef.current[i].value !== \"\"){\n                enteredEmailList.push(emailInputRef.current[i].value);\n            }   \n        }\n\n        const contactData: object = {\n            firstName: enteredFirstName,\n            lastName: enteredLastName,\n            emails: enteredEmailList,\n        };\n\n        props.onNewContact(contactData);\n    }\n        \n    function AddEmail(){\n        setEmails([...emails, \"\"]);\n    }\n\n    function addToEmailInputRef(email: any){\n        if(email && !emailInputRef.current.includes(email)){\n            emailInputRef.current.push(email);\n        } \n    }\n\n    return(\n        <form onSubmit={submitContactHandler} className=\"\">\n            <div>\n                <div>\n                    <div>\n                        <div className=\"flex text-xs xl:space-x-80 xl:pl-80 lg:pl-44 lg:space-x-80 md:space-x-48 md:pl-36 sm:space-x-40\">\n                            <h3>* First name</h3>\n                            <h3>* Last name</h3>\n                        </div>\n                        <div className=\"flex pb-10 xl:space-x-52 xl:pl-80 lg:pl-44 lg:space-x-40 lg:pl-32 md:space-x-10 md:pl-36 space-x-10\">\n                            <div className=\"bg-blue-100 border-solid border-2 border-blue-200\">\n                                <label htmlFor=\"firstname\"></label>\n                                <input className=\"pr-12 sm:pr-3\" type=\"text\" required id=\"firstname\" name=\"firstName\" \n                                    ref={firstNameInputRef} \n                                />\n                            </div>\n                            <div className=\"bg-blue-100 border-solid border-2 border-blue-200\">\n                                <label htmlFor=\"lastname\"></label>\n                                <input className=\"pr-12 sm:pr-3\" type=\"text\" required id=\"lastname\" name=\"LastName\" \n                                    ref={lastNameInputRef} \n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"xl:pl-80 lg:pl-44 md:pl-36\">\n                        <div className=\"text-xs\">\n                            Email\n                        </div>\n                        <div>\n                            {emails.map((email:any, i:any)=>{\n                                return(\n                                    <div key={\"email\" + i}>\n                                        <label htmlFor=\"email\"></label>\n                                            <input className=\"border-solid border-2 border-blue-200 pr-3\" \n                                            type=\"text\" id={\"email\" + i} name={\"email\" + i} ref={addToEmailInputRef} \n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div>\n                            <button className=\"text-green-500 pb-10\" onClick={AddEmail} type=\"button\">\n                                + Add Email\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"xl:space-x-60 xl:pl-96 lg:pl-64 lg:space-x-56 md:pl-48 md:space-x-36 sm:pl-14 sm:space-x-32\"> \n                    <Link className=\"border-2 border-gray-300 px-6 py-2 rounded text-yellow-600\" to=\"/addressBook\">Cancel</Link>\n                    <button className=\"bg-green-600 px-2 py-1 text-white text-left rounded\">Save</button>\n                </div>\n            </div>\n        </form>\n    ) \n}\n\nexport default NewContactForm;","import {useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ContactContext from '../ContactContext';\n\nfunction ContactItem(props:any){\n    const contactCtx = useContext(ContactContext);\n    const history = useHistory();\n    \n    function SelectedContactHandler(props:any){\n        history.replace(\"/addressBook\");\n        contactCtx.replaceContact(props);\n    }\n\n    return(\n        <section>\n            <li>\n                <div>\n                    <button onClick={() => SelectedContactHandler(props)}>\n                        {props.firstName + \" \" + props.lastName}\n                    </button> \n                </div>\n            </li>\n        </section>\n    )\n}\n\nexport default ContactItem;","import ContactItem from './ContactItem';\n\nfunction ContactList(props:any){\n    return (\n        <ul>\n            {props.contacts.map((contact:any) => {\n                return (\n                <ContactItem\n                    key={contact.id}\n                    id={contact.id}\n                    firstName={contact.firstName}\n                    lastName={contact.lastName}\n                    emails={contact.emails}\n                />\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default ContactList;","function FetchAll(url: string, method: string, setIsLoading: any, setLoadedContacts: any){\n    const fetchResponse = (response:any) => {\n        return (\n            response.json()\n        );\n    };\n\n    const fetchData = ((data: any) => {\n        const contacts:any = [];\n\n        for(const key in data.contacts){\n            const contact = {\n                id: key,\n                ...data.contacts[key]\n            };\n\n            contacts.push(contact);\n        };\n\n        sortData(contacts);\n\n        return(\n            setLoadedContacts(contacts),\n            setIsLoading(false)\n        );\n    });\n\n    const sortData = ((data:any) => {\n        data.sort(function (a:any, b:any){\n            return a.firstName.localeCompare(b.firstName) || \n                   a.lastName.localeCompare(b.lastName)\n        });\n    })\n\n    fetch(\n        url,\n        {\n            method: method,\n        }\n    )\n    .then(response => fetchResponse(response))\n    .then(data => fetchData(data));\n};\n\nexport default FetchAll;","import {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport ContactList from '../components/contacts/ContactList';\nimport FetchAll from '../components/functions/FetchAll';\n\nfunction ContactPage(){\n    const [isLoading, setIsLoading] = useState(true);\n    const [loadedContacts, setLoadedContacts] = useState([]);\n\n    useEffect(() => {\n        console.log(\"Effect\")\n        setIsLoading(true);\n        const url = 'https://avb-contacts-api.herokuapp.com/contacts/paginated';\n\n        FetchAll(url, \"GET\", setIsLoading, setLoadedContacts);\n    },[]);    \n\n    if(isLoading){\n        return (\n            <section>\n                <p>Loading...</p>\n            </section>\n        )\n    };\n\n    return(\n        <section>\n            <div className=\"fixed top-0 left-0 bottom-0 space-y-5 bg-gray-50 p-5\">                        \n                <div className=\"space-x-3 flex\">\n                    <h1 className=\"text-2xl\">Contacts</h1>\n                    <Link className=\"bg-green-400 px-1 text-white rounded-full h-8 w-8 text-2xl text-center\" to=\"/addressBook/edit/newContact\">+</Link>\n                </div>\n                <div>\n                    <ContactList contacts={loadedContacts}/>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default ContactPage;","import {useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport ContactContext from '../components/ContactContext';\nimport NewContactForm from '../components/contacts/NewContactForm';\nimport Contacts from './Contacts';\n\nfunction NewContactPage(){\n    const history = useHistory();\n    const contactCtx = useContext(ContactContext);\n\n    function newContactHandler(newContactData: any){\n        fetch(\n            'https://avb-contacts-api.herokuapp.com/contacts',\n            {\n                method: \"POST\",\n                body: JSON.stringify(newContactData),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n        )\n        .then(() => {\n            contactCtx.replaceContact([]);\n            history.replace(\"/addressBook\");\n        })\n    };\n\n    return (\n        <section className=\"relative\">\n            <div className=\"md:flex\">\n                <div>\n                    <Contacts/>\n                </div>\n                <div className=\"fixed left-44 right-0 p-10 space-y-20\">\n                    <h1 className=\"text-center\">New Contact</h1>\n                    <NewContactForm onNewContact={newContactHandler} />\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default NewContactPage;","\nfunction HomeItem(props:any){\n\n    return(\n        <section className=\"xl:pl-96 lg:pl-60 md:pl-32 sm:pl-5\">\n                <div className=\"space-y-10 pt-10\">\n                    <div className=\"flex space-x-72\">\n                        <div>\n                            <h3 className=\"text-xs\">First name:</h3>\n                            <div>{props.contact.firstName}</div>\n                        </div>\n                        <div className=\"flex-auto\">\n                            <h3 className=\"text-xs\">Last name:</h3> \n                            <div>{props.contact.lastName}</div>\n                        </div>\n                    </div>           \n                    <div>\n                        <h3>Email:</h3>\n                        {props.contact.emails !== undefined ? props.contact.emails.map((email: any) => {\n                            return (<h3>{email}</h3>)}) : null}\n                    </div>\n                </div>\n        </section>\n    )\n}\n\nexport default HomeItem;","import {useContext} from 'react';\n\nimport ContactContext from '../ContactContext';\nimport HomeItem from './HomeItem';\n\nfunction HomePage(props: any){\n    const contactCtx = useContext(ContactContext);\n    \n    let content; \n\n    if(contactCtx.contact.length === 0){\n        content = <HomeItem contact={props.firstContact}/>;\n        contactCtx.replaceContact(props.firstContact);\n    }\n    else{ \n        content = <HomeItem contact={contactCtx.contact}/>\n    }\n\n    return(\n        <section>\n            <div>\n                {content}\n            </div>\n        </section>\n    )\n}\n\nexport default HomePage;","import {useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport ContactList from '../components/contacts/ContactList';\nimport FetchAll from '../components/functions/FetchAll';\nimport Home from '../components/home/Home';\n\nfunction MainPage(){\n    const [isLoading, setIsLoading] = useState(true);\n    const [loadedContacts, setLoadedContacts] = useState([]);\n\n    useEffect(() => {\n        console.log(\"Effect\");\n        \n        setIsLoading(true);\n        const url = 'https://avb-contacts-api.herokuapp.com/contacts/paginated';\n\n        FetchAll(url, \"GET\", setIsLoading, setLoadedContacts);\n    },[]);    \n\n    if(isLoading){\n        return (\n            <section>\n                <p>Loading...</p>\n            </section>\n        )\n    };\n\n    return(\n        <section>\n                <div>\n                    <div className=\"fixed top-0 left-0 bottom-0 space-y-5 bg-gray-50 p-5\">\n                        <div className=\"space-x-3 flex\">\n                            <h1 className=\"text-2xl\">Contacts</h1>\n                            <Link className=\"bg-green-400 px-1 text-white rounded-full h-8 w-8 text-2xl text-center\" to=\"/edit/newContact\">+</Link>\n                        </div>\n                        <div>\n                            <ContactList contacts={loadedContacts}/>\n                        </div>\n                    </div>\n                    <div className=\"fixed left-44 right-0 p-10\">\n                        <div className=\"text-sm text-right text-blue-400 pt-10 pr-10\">\n                            <Link to=\"/addressBook/edit/updateContact\">\n                                Edit\n                            </Link>\n                        </div>\n                        <div className=\"fixed left-44 right-0 p-10\">\n                            <div>\n                                <Home firstContact={loadedContacts[0]}/>\n                            </div>\n                            <div className=\"text-center object-bottom pt-10\">\n                                <Link className=\"text-red-600\" to=\"/addressBook/edit/DeleteContact\">\n                                    Delete\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </section>\n    );\n};\n\nexport default MainPage;","import {useRef, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\ntype Inputs = {\n    firstName: string,\n    lastName: string,\n}\n\nfunction UpdateContactForm(props: any){\n    const [emails, setEmails] = useState<string[]>([]);\n    const {handleSubmit} = useForm<Inputs>();\n\n    const firstNameInputRef = useRef<HTMLInputElement>(null);\n    const lastNameInputRef = useRef<HTMLInputElement>(null);\n    const emailInputRef = useRef<HTMLInputElement[]>([]);\n\n    function SubmitUpdateHandler(event: React.FormEvent<HTMLFormElement>){\n        const currentFirstName = props.contactData.firstName;\n        const currentLastName = props.contactData.lastName;\n        const currentEmails = [...props.contactData.emails];\n\n        let updatedFirstName = \"\";\n        let updatedLastName = \"\";\n        let updatedEmails = [];\n\n        firstNameInputRef.current === null ? \n            updatedFirstName = currentFirstName : updatedFirstName = firstNameInputRef.current.value;\n\n        lastNameInputRef.current === null ?\n            updatedLastName = currentLastName : updatedLastName = lastNameInputRef.current.value;\n\n        currentEmails.map((email: any) => {\n            return addToEmailInputRef(email);\n        });\n\n        console.log(emailInputRef.current);\n\n        for(let i = 0; i < emailInputRef.current.length; i++){\n            if(emailInputRef.current[i].value !== \"\"){\n                updatedEmails.push(emailInputRef.current[i].value);\n            }   \n        }   \n            \n        const newContactData: object = {\n            id: props.contactData.id,\n            firstName: updatedFirstName,\n            lastName: updatedLastName,\n            emails: updatedEmails,\n        };\n\n        props.onContactUpdate(newContactData);\n    };\n\n    function AddEmail(){\n        setEmails([...emails, \"\"]);\n    }\n\n    function addToEmailInputRef(email: any){\n        if(email && !emailInputRef.current.includes(email) && !props.contactData.emails.includes(email)){\n            emailInputRef.current.push(email);\n        } \n    }\n\n    return(\n        <section>\n            <form onSubmit={handleSubmit(SubmitUpdateHandler)}>\n            <div className=\"flex text-xs xl:space-x-80 xl:pl-80 lg:pl-44 lg:space-x-80 md:space-x-48 md:pl-36 sm:space-x-40\">\n                <h3>* First name</h3>\n                <h3>* Last name</h3>\n            </div>\n            <div>\n                <div className=\"flex pb-10 xl:space-x-52 xl:pl-80 lg:pl-44 lg:space-x-40 lg:pl-32 md:space-x-10 md:pl-36 space-x-10\">\n                    <div className=\"bg-blue-100 border-solid border-2 border-blue-200\">\n                        <label htmlFor=\"firstname\"></label>\n                        <input type=\"text\" required id=\"firstname\" name=\"firstName\" defaultValue={props.contactData.firstName}\n                        ref={firstNameInputRef} placeholder=\"First Name\"\n                    />\n                    </div>\n                    <div className=\"bg-blue-100 border-solid border-2 border-blue-200\">\n                        <label htmlFor=\"lastname\"></label>\n                        <input type=\"text\" required id=\"lastname\" name=\"lastName\" defaultValue={props.contactData.lastName}\n                            ref={lastNameInputRef} placeholder={\"Last Name\"}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className=\"xl:pl-80 lg:pl-44 md:pl-36\">\n                <div>\n                    <div className=\"text-xs\">\n                        Email\n                    </div>\n                    <div>\n                        {props.contactData.emails !== undefined ? \n                            props.contactData.emails.map((email: any, k:any) => {\n                                return ( \n                                <div key={\"email\" + k}>\n                                <label htmlFor=\"email\"></label>\n                                <input className=\"border-solid border-2 border-blue-200\" type=\"text\" id={\"email\" + k} name={\"email\" + k} defaultValue={props.contactData.emails[k]}\n                                    ref={addToEmailInputRef} placeholder={\"Email\"}\n                                />\n                                </div>\n                                )\n                            }) : null }\n                    </div>\n                </div>\n                <div>\n                    {emails.map((email:any, i:any)=>{\n                        return(\n                            <div key={\"email\" + i}>\n                                <label htmlFor=\"email\"></label>\n                                <input className=\"border-solid border-2 border-blue-200\" type=\"text\" id={\"email\" + i} name={\"email\" + i}\n                                    ref={addToEmailInputRef} placeholder={\"Email\"}\n                            />\n                            </div>\n                        )\n                    })}\n                    <div>\n                        <button className=\"text-green-500 pb-10\" onClick={AddEmail} type=\"button\">\n                            + Add Email\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"xl:space-x-60 xl:pl-96 lg:pl-64 lg:space-x-56 md:pl-48 md:space-x-36 sm:pl-14 sm:space-x-32\">\n                <Link className=\"border-2 border-gray-300 px-6 py-2 rounded text-yellow-600\" to=\"/addressBook\">Cancel</Link>\n                <button className=\"bg-green-600 px-2 py-1 text-white text-left rounded\">Save</button>\n            </div>\n            </form>\n        </section>\n    )\n}\n\nexport default UpdateContactForm;","\nimport { useHistory } from 'react-router-dom';\nimport {useContext} from 'react';\n\nimport ContactContext from '../components/ContactContext';\nimport UpdateContactForm from '../components/contacts/UpdateContactForm';\nimport Contacts from './Contacts';\n\nfunction UpdateContact(props: any){\n    const history = useHistory();\n    const contactCtx = useContext(ContactContext);\n    const content = contactCtx.contact;\n\n    function UpdateContactHandler(updateContactData:any){\n        const id = updateContactData.id;\n        const url = 'https://avb-contacts-api.herokuapp.com/contacts/' + id;\n\n        fetch(\n            url, \n            {\n                method:\"PUT\",\n                body: JSON.stringify(updateContactData),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n        )\n        .then(() => {\n            contactCtx.replaceContact([]);\n            history.replace(\"/addressBook\")\n        })\n    } \n\n    return(\n        <section className=\"relative\">\n            <div className=\"md:flex\">\n                <div>\n                    <Contacts/>\n                </div>\n                <div className=\"fixed left-44 right-0 p-10 space-y-20\">\n                    <h1 className=\"text-center\">Update Contact</h1>\n                    <UpdateContactForm contactData={content} onContactUpdate={UpdateContactHandler}/>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default UpdateContact;","import { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ContactContext from './ContactContext';\n\nfunction Modal(props:any){\n    const history = useHistory();\n    const contactCtx = useContext(ContactContext);\n\n    function confirmHandler(){\n        const id = props.contactData.id;\n        const url = 'https://avb-contacts-api.herokuapp.com/contacts/' + id;\n\n        fetch(\n            url, \n            {\n                method:\"DELETE\"\n            }\n        )\n        .then(()=> {\n            history.replace(\"/addressBook\");\n            contactCtx.replaceContact([]);\n        })\n    }\n\n    return (\n        <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items-center text-center\">\n            <div className=\"bg-white rounded z-50\">\n                <div className=\"m-2 pb-2\">\n                    <h1>Delete contact?</h1>\n                </div>\n                <div className=\"m-2\">\n                    <div className=\"space-x-5\">\n                        <button className=\"border-2 border-gray-300 px-2 py-1 rounded text-yellow-600\" onClick={props.onCancel}>Cancel</button>\n                        <button className=\"bg-red-600 px-2 py-1 text-white rounded\" onClick={confirmHandler}>Confirm</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) \n}\n\nexport default Modal;","function Backdrop(props: any){\n    return <div className=\"bg-black bg-opacity-50 absolute inset-0 cursor-pointer z-0\" onClick={props.onCancel}/>;\n}\n\nexport default Backdrop;","import {useState, useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Main from '../pages/Main';\nimport Modal from '../components/Modal';\nimport Backdrop from '../components/Backdrop';\nimport ContactContext from '../components/ContactContext';\n\nfunction DeleteContactPage(){\n    const [modalIsOpen, setModalIsOpen] = useState(true);\n    const history = useHistory();\n    const contactCtx = useContext(ContactContext);\n\n    const content = contactCtx.contact;\n\n    function closeModalHandler(){\n        setModalIsOpen(false);\n        history.replace(\"/addressBook\");\n    }\n\n    return(\n        <section>\n            <div>\n                <Main/>\n                <div>\n                { modalIsOpen && <Modal contactData={content} onCancel={closeModalHandler}/>}\n                { modalIsOpen && <Backdrop onCancel={closeModalHandler}/>}\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default DeleteContactPage;","import React from 'react';\nimport { Switch, Route} from 'react-router-dom';\n\nimport NewContactPage from './pages/NewContact';\nimport MainPage from './pages/Main';\nimport UpdateContactPage from './pages/UpdateContact';\nimport DeleteContactPage from './pages/DeleteContact';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n      <Route path='/addressBook' exact>\n        <MainPage/>\n      </Route>\n      <Route path='/addressBook/edit/deleteContact' exact>\n        <DeleteContactPage/>\n      </Route>\n      <Route path='/addressBook/edit/newContact' exact>\n        <NewContactPage/>\n      </Route>\n      <Route path='/addressBook/edit/updateContact' exact>\n        <UpdateContactPage/>\n      </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App';\nimport './index.css';\nimport {ContactContextProvider} from './components/ContactContext';\n\nReactDOM.render(\n  <ContactContextProvider>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </ContactContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}